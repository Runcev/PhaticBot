@page "/"
@using PhaticBot.Services
@inject BotService Service
@inject IJSRuntime JsRuntime

<EditForm Model="_message" OnValidSubmit="ReceivedMessage">
    <div class="chat">
        <div class="chat-title">
            <h1>Phatic</h1>
            <h2>Bot</h2>
            <figure class="avatar">
                <img src="bot-icon.png"/>
            </figure>
        </div>
        <div class="messages">
            <div class="messages-content">
                @foreach ((string personal, string bots) in _personalMessages.Zip(_botsMessages))
                {
                    <PersonalMessage Msg="@personal"></PersonalMessage>
                    <BotsMessage Msg="@bots"></BotsMessage>
                }
                <div id="anchor"></div>
            </div>
        </div>
        <div class="message-box">
            <InputText @bind-Value="_message" class="message-input" placeholder="Type message..."/>
            @* <button type="submit" class="message-submit">Send</button> *@
        </div>

    </div>
    <div class="bg"></div>
</EditForm>

@code {

    private string _message = "";

    private readonly List<string> _personalMessages = new List<string>();
    private readonly List<string> _botsMessages = new List<string>();

    private void ReceivedMessage()
    {
        if (!string.IsNullOrWhiteSpace(_message))
        {
            _personalMessages.Add(_message);
            _botsMessages.Add(BotService.Receive(_message));
        }

        _message = "";
        ScrollToBottom();
    }

    private void ScrollToBottom()
    {
        Task.Run(async () =>
        {
            _needReload = true;
            await InvokeAsync(StateHasChanged);
            await JsRuntime.InvokeVoidAsync("scrollToBottom");
            _needReload = false;
        });
    }

    private bool _needReload;

    protected override bool ShouldRender()
    {
        return _needReload;
    }

}